{% comment %}
  Enhanced Product Features Section
  This section adds conversion-focused features to product pages
{% endcomment %}

{% liquid
  assign product = closest.product
  assign current_variant = product.selected_or_first_available_variant
%}

<div class="enhanced-product-features" data-product-enhancements>
  <!-- Breadcrumbs for better navigation and SEO -->
  {% render 'breadcrumbs' %}
  
  <!-- Social Proof Widgets -->
  <div class="social-proof-container">
    {% render 'social-proof', type: 'visitors', count: 18 %}
    
    {% if current_variant.inventory_quantity < 10 and current_variant.inventory_quantity > 0 %}
      {% render 'social-proof', type: 'stock-level', inventory: current_variant.inventory_quantity %}
    {% endif %}
    
    {% if settings.show_recent_purchase %}
      {% render 'social-proof', type: 'recent-purchase', product: product %}
    {% endif %}
  </div>
  
  <!-- Enhanced Trust Badges -->
  <div class="enhanced-trust-badges">
    <div class="trust-badges">
      <div class="trust-badge">
        <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
          <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
        </svg>
        <span>{{ settings.trust_badge_1 | default: 'Free shipping over $75' }}</span>
      </div>
      
      <div class="trust-badge">
        <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
          <path d="M4 4v5a3 3 0 006 0V4a3 3 0 00-6 0zM14 4v5a3 3 0 006 0V4a3 3 0 00-6 0z"/>
        </svg>
        <span>{{ settings.trust_badge_2 | default: '30-day returns' }}</span>
      </div>
      
      <div class="trust-badge">
        <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
          <path d="M5 13l4 4L19 7"/>
        </svg>
        <span>{{ settings.trust_badge_3 | default: 'Secure checkout' }}</span>
      </div>
    </div>
  </div>
  
  <!-- Product Recommendations with Enhanced UX -->
  {% if settings.show_product_recommendations != false %}
    <div class="enhanced-recommendations" data-enhanced-recommendations>
      <div class="recommendations-header">
        <h3>Complete the Look</h3>
        <p>Frequently bought together</p>
      </div>
      
      <div class="recommendations-grid" data-product-recommendations>
        <!-- This will be populated by JavaScript for better performance -->
      </div>
    </div>
  {% endif %}
  
  <!-- Back in Stock Notification for Sold Out Products -->
  {% unless current_variant.available %}
    <div class="back-in-stock-notification">
      <h4>Get notified when this item is back in stock</h4>
      
      {% form 'contact', class: 'back-in-stock-form' %}
        <input type="hidden" name="contact[tags]" value="back-in-stock,{{ product.handle }}">
        <input type="hidden" name="contact[body]" value="Please notify me when {{ product.title }} - {{ current_variant.title }} is back in stock.">
        
        <div class="form-group">
          <input 
            type="email" 
            name="contact[email]" 
            placeholder="Enter your email address"
            required
            class="back-in-stock-input"
          >
          <button type="submit" class="back-in-stock-button">
            Notify Me
          </button>
        </div>
        
        {% if form.posted_successfully? %}
          <div class="form-success">
            âœ“ Thanks! We'll email you when this item is back in stock.
          </div>
        {% endif %}
        
        {% if form.errors %}
          <div class="form-errors">
            {% for error in form.errors %}
              <p>{{ error }}</p>
            {% endfor %}
          </div>
        {% endif %}
      {% endform %}
    </div>
  {% endunless %}
  
  <!-- Size Guide Modal Trigger (if applicable) -->
  {% if product.type == 'Clothing' or product.tags contains 'sizing' %}
    <button class="size-guide-trigger" data-size-guide-trigger>
      <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
        <path d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zM8.94 6.94a.75.75 0 11-1.061-1.061 3 3 0 112.871 5.026l-.345.345a1.5 1.5 0 00-.44 1.06v.349a.75.75 0 11-1.5 0v-.35c0-.703.26-1.369.732-1.882l.377-.377a1.5 1.5 0 10-1.634-2.485z"/>
        <path d="M9.25 15a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75H10a.75.75 0 01-.75-.75V15z"/>
      </svg>
      Size Guide
    </button>
  {% endif %}
  
  <!-- Recently Viewed Products (will be populated by JavaScript) -->
  <div class="recently-viewed" data-recently-viewed style="display: none;">
    <h3>Recently Viewed</h3>
    <div class="recently-viewed-grid" data-recently-viewed-products></div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Enhanced Product Features JavaScript
  
  // Track recently viewed products
  const product = {
    id: {{ product.id }},
    title: {{ product.title | json }},
    handle: {{ product.handle | json }},
    image: {{ product.featured_image | image_url: width: 300 | json }},
    price: {{ current_variant.price | money | json }},
    url: {{ product.url | json }}
  };
  
  // Store in localStorage
  let recentlyViewed = JSON.parse(localStorage.getItem('recentlyViewed') || '[]');
  recentlyViewed = recentlyViewed.filter(item => item.id !== product.id);
  recentlyViewed.unshift(product);
  recentlyViewed = recentlyViewed.slice(0, 4); // Keep only 4 items
  localStorage.setItem('recentlyViewed', JSON.stringify(recentlyViewed));
  
  // Display recently viewed (if more than current product)
  if (recentlyViewed.length > 1) {
    const container = document.querySelector('[data-recently-viewed]');
    const grid = document.querySelector('[data-recently-viewed-products]');
    
    if (container && grid) {
      const otherProducts = recentlyViewed.slice(1);
      grid.innerHTML = otherProducts.map(item => `
        <div class="recently-viewed-item">
          <a href="${item.url}" class="recently-viewed-link">
            <img src="${item.image}" alt="${item.title}" loading="lazy">
            <h4>${item.title}</h4>
            <p>${item.price}</p>
          </a>
        </div>
      `).join('');
      
      container.style.display = 'block';
    }
  }
  
  // Size guide modal functionality
  const sizeGuideBtn = document.querySelector('[data-size-guide-trigger]');
  if (sizeGuideBtn) {
    sizeGuideBtn.addEventListener('click', function() {
      // This would open a size guide modal
      // Implementation depends on your modal system
      console.log('Size guide modal would open here');
    });
  }
  
  // Enhanced recommendations loading
  const recommendationsContainer = document.querySelector('[data-product-recommendations]');
  if (recommendationsContainer) {
    // Load recommendations via AJAX for better performance
    fetch(`${window.location.pathname}?sections=product-recommendations`)
      .then(response => response.text())
      .then(html => {
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');
        const recommendations = doc.querySelector('.product-recommendations');
        
        if (recommendations && recommendations.innerHTML.trim()) {
          recommendationsContainer.innerHTML = recommendations.innerHTML;
        }
      })
      .catch(error => console.log('Could not load recommendations:', error));
  }
});
</script>

<style>
.enhanced-product-features {
  margin: var(--gap-lg) 0;
}

.social-proof-container {
  margin: var(--gap-md) 0;
}

.enhanced-trust-badges {
  margin: var(--gap-lg) 0;
}

.enhanced-recommendations {
  margin: var(--gap-2xl) 0;
  padding: var(--gap-xl);
  background: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-lg);
}

.recommendations-header h3 {
  margin: 0 0 var(--gap-sm);
  font-size: var(--font-size-xl);
}

.recommendations-header p {
  margin: 0 0 var(--gap-lg);
  color: var(--color-foreground);
  opacity: 0.7;
}

.back-in-stock-notification {
  background: var(--color-background);
  border: 2px dashed var(--color-border);
  border-radius: var(--border-radius-lg);
  padding: var(--gap-xl);
  margin: var(--gap-lg) 0;
  text-align: center;
}

.back-in-stock-notification h4 {
  margin: 0 0 var(--gap-md);
  font-size: var(--font-size-lg);
}

.form-group {
  display: flex;
  gap: var(--gap-sm);
  max-width: 400px;
  margin: 0 auto;
}

.back-in-stock-input {
  flex: 1;
  padding: var(--gap-md);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-md);
  font-size: var(--font-size-base);
}

.back-in-stock-button {
  background: var(--color-primary);
  color: var(--color-background);
  border: none;
  border-radius: var(--border-radius-md);
  padding: var(--gap-md) var(--gap-lg);
  font-size: var(--font-size-base);
  font-weight: 600;
  cursor: pointer;
  transition: background-color 0.2s ease;
  min-height: var(--touch-target-min);
}

.back-in-stock-button:hover {
  background: var(--color-primary-hover);
}

.form-success {
  color: var(--color-success, #10b981);
  margin-top: var(--gap-md);
  font-weight: 500;
}

.form-errors {
  color: var(--color-error, #ef4444);
  margin-top: var(--gap-md);
}

.size-guide-trigger {
  display: flex;
  align-items: center;
  gap: var(--gap-sm);
  background: none;
  border: 1px solid var(--color-border);
  color: var(--color-foreground);
  padding: var(--gap-sm) var(--gap-md);
  border-radius: var(--border-radius-md);
  cursor: pointer;
  font-size: var(--font-size-sm);
  margin: var(--gap-md) 0;
  transition: all 0.2s ease;
  min-height: var(--touch-target-min);
}

.size-guide-trigger:hover {
  background: var(--color-foreground);
  color: var(--color-background);
}

.recently-viewed {
  margin: var(--gap-2xl) 0;
  padding: var(--gap-xl);
  background: var(--color-background);
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-lg);
}

.recently-viewed h3 {
  margin: 0 0 var(--gap-lg);
  font-size: var(--font-size-xl);
}

.recently-viewed-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--gap-lg);
}

.recently-viewed-item {
  text-align: center;
}

.recently-viewed-link {
  display: block;
  text-decoration: none;
  color: var(--color-foreground);
  transition: opacity 0.2s ease;
}

.recently-viewed-link:hover {
  opacity: 0.8;
}

.recently-viewed-item img {
  width: 100%;
  height: 200px;
  object-fit: cover;
  border-radius: var(--border-radius-md);
  margin-bottom: var(--gap-sm);
}

.recently-viewed-item h4 {
  font-size: var(--font-size-base);
  margin: 0 0 var(--gap-xs);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.recently-viewed-item p {
  font-weight: 600;
  color: var(--color-primary);
  margin: 0;
}

@media (max-width: 767px) {
  .form-group {
    flex-direction: column;
    max-width: 100%;
  }
  
  .recently-viewed-grid {
    grid-template-columns: repeat(2, 1fr);
    gap: var(--gap-md);
  }
  
  .recently-viewed-item img {
    height: 150px;
  }
}
</style>